function snapmovie(snapdata, filename, nfield, speed, framerate, framequality, outerxsize, outerzsize)
% This function generates a move from GTC snapshots output
% This function uses VideoWriter Object from Matlab, which is only
% supported since 2010b. Check your Matlab Version before using.
%
% "snapdata" is a matlab structure generated by readallsnap
%
% "filename" is the name of your output video
% For example: filename = "a", then output video will be "a.avi"
%
% "nfield" is the field you want to plot in the movie. The defaults are
% 1:phi         % 2: apara        % 3: fluidne
%
% "speed" is the speed of your movie.
% For example, speed = 2 will generate one frame from 2 snapshot files
% Default: speed = 1
%
% "framerate" is (I guess) the number of frames in one second of movie.
% Default: framerate = 10
%
% "framequality" is the video quality VideoWriter
% Default: framemrate = 75
%
% "outerxsize" and "outerzsize" is the width and height of the movie
% Default: outerxsize = 1200, outerzsize = 800


%% Initialization:handle optional arguments
if ~exist('snapdata','var') || isempty(snapdata)
    error('Error: snapmovie must contain the argument snapdata');
else
    snap = snapdata;
end

if ~exist('filename','var') || isempty(filename)
    % default filename
    filename = 'GTCsnapmovie.avi';
end

if ~exist('speed', 'var') || isempty(speed)
    speed=1;
end

if ~exist('framerate', 'var') || isempty(framerate)
    framerate = 10;
end

if ~exist('nfield','var') || isempty(nfield)
    nfield = 1;
end

if ~exist('framequality', 'var') || isempty(framequality)
    framequality = 75;
end

if ~exist('outerxsize', 'var') || isempty(outerxsize)
    outerxsize = 1200;
end

if ~exist('outerzsize', 'var') || isempty(outerzsize)
    outerzsize = 800;
end


nFrame=floor(snap.totalnumber/speed);
%% Prepare Video Writer
vid = VideoWriter(filename);
vid.FrameRate=framerate;
vid.Quality=framequality;

hFig = figure(1);
set(hFig, 'Outerposition', [0 0 outerxsize outerzsize]);

xsize=max(max(snap.x))-min(min(snap.x));
zsize=max(max(snap.z))-min(min(snap.z));

%set x and z have the same scale
height=0.9;
width=xsize/zsize*height*outerzsize/outerxsize;
width = min(width, 0.55);

set(gca,'nextplot','replacechildren');
set(gcf,'Renderer','zbuffer');

open(vid)


%% Start writing frames
for k=1:nFrame
    i0=speed*k;
    set(hFig, 'Outerposition', [0 0 outerxsize outerzsize]);
    
   
    
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    % First subplot, radial RMS profile of phi
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    leftedge = max(0.6, 0.1+width);
    width2 = 0.95-leftedge;
    
    s2=subplot(2,2,2, 'Position',[leftedge,0.55,width2,0.4]);
    %set(s2,'Units','Normalized','Position',[0.14+width,0.55,0.85-width,0.4]);
    plot(snap.rho,snap.fieldrms(i0,:,1));
    xlabel('rho');
    title('phi RMS');
    
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    % Second subplot, radial RMS profile of apara
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    s3=subplot(2,2,4,'Position',[leftedge,0.05,width2,0.4] );
    %set(s3,'Units','Normalized','Position',[0.14+width,0.05,0.85-width,0.4]);
    plot(snap.rho,snap.fieldrms(i0,:,2));
    xlabel('rho');
    title('apara RMS');
    
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    % The last (main) subplot, contour plots from snapdata
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    s1=subplot(2,2,[1 3]);
    set(s1,'Units','Normalized','Position',[0.03,0.05,width,height]);
    contourf(snap.x,snap.z,reshape(snap.poloidata(i0,:,:,nfield),snap.mtgrid,snap.mpsi));
    xlabel('X/R_0');
    ylabel('Z/R_0');
    
    % insert time label for each frame
    currenttime=['tstep=',num2str(snap.t(i0))];
    text(1.15,0.4,currenttime);
    
    % you can customize  the title of this subplot yourself
    if (nfield ==1)
        title('\delta \phi contour');
    elseif (nfield==2)
        title('\delta Apara contour');
    elseif (nfield==3)
        title('fluidne countour');
    end
    
    % plot colorbar
    colorbar;
 
    
    
    % write the frame into the video
    frame=getframe(gcf);
    writeVideo(vid,frame);
end

% finalization
close(vid)